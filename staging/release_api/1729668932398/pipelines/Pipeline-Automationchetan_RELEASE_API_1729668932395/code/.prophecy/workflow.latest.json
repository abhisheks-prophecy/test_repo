{
  "metainfo" : {
    "migrationVersions" : {
      "gemBuilderVersion" : "v1"
    },
    "functions" : { },
    "codeGenConfiguration" : {
      "editableConfig" : true,
      "plibVersion" : {
        "mavenVersion" : "8.4.0-SNAPSHOT"
      },
      "sparkConfigJinjaEnabled" : true
    },
    "id" : "1",
    "uri" : "pipelines/Pipeline-Automationchetan_RELEASE_API_1729668932395",
    "pipelineSettingsInfo" : {
      "applicationName" : "Pipeline-Automationchetan_RELEASE_API_1729668932395",
      "hasApplication" : true,
      "isFunctionsPackageDirDefined" : true
    },
    "language" : "scala",
    "fabricId" : "9",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "udfs" : {
      "language" : "scala",
      "udfs" : [ ],
      "functionPackageName" : "abhishekse2etestsprophecyioteam.projectautomationchetanscalareleaseapi.functions",
      "sharedFunctionPackageNames" : [ "io.prophecy.scalagems.functions", "io.prophecy.warehousegems.functions" ]
    },
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "default",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ ],
    "dependentProjectExternalDependencies" : [ {
      "projectUID" : "39",
      "projectName" : "ProphecySparkBasicsScala",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "40",
      "projectName" : "ProphecyWarehouseScala",
      "externalDependencies" : [ ]
    } ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Disabled",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "io.prophecy.pipelines.pipelineautomationchetan_release_api_1729668932395",
    "configurationVersion" : "v2"
  },
  "connections" : [ {
    "id" : "emYwqTXrsokoIqlKH0ur7",
    "source" : "nmHBtsILjPVmFYXjq4vwU$$CXCF_x7Yt3XkEb80SaRIi",
    "sourcePort" : "fjc0vapL_1-LwrGv13lW9$$MA0QuLzcMJR66lOwHXTGK",
    "target" : "qtswkQGpxTQf1ROP3hNRL$$cIw9Don87Q1ep6mSqvyNa",
    "targetPort" : "QhgPDrUCn7QwyAD657JTd$$WLgAfXG1VDGSxunNqJU6D"
  } ],
  "processes" : {
    "nmHBtsILjPVmFYXjq4vwU$$CXCF_x7Yt3XkEb80SaRIi" : {
      "id" : "nmHBtsILjPVmFYXjq4vwU$$CXCF_x7Yt3XkEb80SaRIi",
      "component" : "Source",
      "metadata" : {
        "label" : "Project-Automationchetan_scala_RELEASE_API_dataSet",
        "slug" : "Project_Automationchetan_scala_RELEASE_API_dataSet",
        "x" : 20,
        "y" : 20,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "fjc0vapL_1-LwrGv13lW9$$MA0QuLzcMJR66lOwHXTGK",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/Project-Automationchetan_scala_RELEASE_API_dataSet"
      }
    },
    "qtswkQGpxTQf1ROP3hNRL$$cIw9Don87Q1ep6mSqvyNa" : {
      "id" : "qtswkQGpxTQf1ROP3hNRL$$cIw9Don87Q1ep6mSqvyNa",
      "component" : "test_dummy_gem",
      "metadata" : {
        "label" : "customer_details_selection",
        "slug" : "customer_details_selection",
        "x" : 220,
        "y" : 20,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "comment" : "Extracts essential customer information for further analysis or reporting.",
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ {
          "id" : "QhgPDrUCn7QwyAD657JTd$$WLgAfXG1VDGSxunNqJU6D",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "CMPtRXQZB4aP4rauTjmqO$$7GVjZW47S0TLGYqDo5DD6",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "columnsSelector" : [ "QhgPDrUCn7QwyAD657JTd$$WLgAfXG1VDGSxunNqJU6D##customer_id", "QhgPDrUCn7QwyAD657JTd$$WLgAfXG1VDGSxunNqJU6D##first_name", "QhgPDrUCn7QwyAD657JTd$$WLgAfXG1VDGSxunNqJU6D##last_name", "QhgPDrUCn7QwyAD657JTd$$WLgAfXG1VDGSxunNqJU6D##phone", "QhgPDrUCn7QwyAD657JTd$$WLgAfXG1VDGSxunNqJU6D##email", "QhgPDrUCn7QwyAD657JTd$$WLgAfXG1VDGSxunNqJU6D##country_code", "QhgPDrUCn7QwyAD657JTd$$WLgAfXG1VDGSxunNqJU6D##account_open_date", "QhgPDrUCn7QwyAD657JTd$$WLgAfXG1VDGSxunNqJU6D##account_flags" ],
        "expressions" : [ {
          "_row_id" : "694666723",
          "target" : "customer_id",
          "expression" : {
            "format" : "sql",
            "expression" : "customer_id"
          },
          "description" : ""
        }, {
          "_row_id" : "818457490",
          "target" : "first_name",
          "expression" : {
            "format" : "sql",
            "expression" : "first_name"
          },
          "description" : ""
        }, {
          "_row_id" : "719889158",
          "target" : "last_name",
          "expression" : {
            "format" : "sql",
            "expression" : "last_name"
          },
          "description" : ""
        }, {
          "_row_id" : "1650181408",
          "target" : "phone",
          "expression" : {
            "format" : "sql",
            "expression" : "phone"
          },
          "description" : ""
        }, {
          "_row_id" : "121040571",
          "target" : "email",
          "expression" : {
            "format" : "sql",
            "expression" : "email"
          },
          "description" : ""
        }, {
          "_row_id" : "1694921167",
          "target" : "country_code",
          "expression" : {
            "format" : "sql",
            "expression" : "country_code"
          },
          "description" : ""
        }, {
          "_row_id" : "1712201125",
          "target" : "account_open_date",
          "expression" : {
            "format" : "sql",
            "expression" : "account_open_date"
          },
          "description" : ""
        }, {
          "_row_id" : "173865249",
          "target" : "account_flags",
          "expression" : {
            "format" : "sql",
            "expression" : "account_flags"
          },
          "description" : ""
        } ]
      },
      "componentInfo" : {
        "gemId" : "gems/test_dummy_gem",
        "projectName" : "Project-Automationchetan_scala_RELEASE_API"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false,
    "autoUpdateOnRun" : false
  }
}